{"ast":null,"code":"import NextAuth from 'next-auth';\nimport { CredentialsProvider } from 'next-auth/providers';\nimport { verifypassword } from '../../../lib/auth';\nimport { connectToDatabase } from '../../../lib/db';\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [CredentialsProvider({\n    credentials: {\n      async authorize(credentials) {\n        const client = await connectToDatabase();\n        const usersCollection = client.db().collection('users');\n        const user = await usersCollection.findOne({\n          email: credentials.email\n        });\n\n        if (!user) {\n          throw new Error('No user found!');\n        }\n\n        const isValid = await verifypassword(credentials.password, user.password);\n\n        if (!isValid) {\n          throw new Error('Could not log you in!');\n        }\n\n        client.close();\n        return {\n          email: user.email\n        };\n      }\n\n    }\n  })]\n});","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_auth/pages/api/auth/[...nextauth].js"],"names":["NextAuth","CredentialsProvider","verifypassword","connectToDatabase","session","jwt","providers","credentials","authorize","client","usersCollection","db","collection","user","findOne","email","Error","isValid","password","close"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,mBAAT,QAAoC,qBAApC;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,eAAeH,QAAQ,CAAC;AACtBI,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAG,EAAE;AAAP,GADa;AAEtBC,EAAAA,SAAS,EAAE,CACTL,mBAAmB,CAAC;AAClBM,IAAAA,WAAW,EAAE;AACX,YAAMC,SAAN,CAAgBD,WAAhB,EAA6B;AAC3B,cAAME,MAAM,GAAG,MAAMN,iBAAiB,EAAtC;AAEA,cAAMO,eAAe,GAAGD,MAAM,CAACE,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAAxB;AAEA,cAAMC,IAAI,GAAG,MAAMH,eAAe,CAACI,OAAhB,CAAwB;AACzCC,UAAAA,KAAK,EAAER,WAAW,CAACQ;AADsB,SAAxB,CAAnB;;AAIA,YAAI,CAACF,IAAL,EAAW;AACT,gBAAM,IAAIG,KAAJ,CAAU,gBAAV,CAAN;AACD;;AAED,cAAMC,OAAO,GAAG,MAAMf,cAAc,CAClCK,WAAW,CAACW,QADsB,EAElCL,IAAI,CAACK,QAF6B,CAApC;;AAKA,YAAI,CAACD,OAAL,EAAc;AACZ,gBAAM,IAAID,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAEDP,QAAAA,MAAM,CAACU,KAAP;AACA,eAAO;AAAEJ,UAAAA,KAAK,EAAEF,IAAI,CAACE;AAAd,SAAP;AACD;;AAzBU;AADK,GAAD,CADV;AAFW,CAAD,CAAvB","sourcesContent":["import NextAuth from 'next-auth';\nimport { CredentialsProvider } from 'next-auth/providers';\nimport { verifypassword } from '../../../lib/auth';\nimport { connectToDatabase } from '../../../lib/db';\n\nexport default NextAuth({\n  session: { jwt: true },\n  providers: [\n    CredentialsProvider({\n      credentials: {\n        async authorize(credentials) {\n          const client = await connectToDatabase();\n\n          const usersCollection = client.db().collection('users');\n\n          const user = await usersCollection.findOne({\n            email: credentials.email,\n          });\n\n          if (!user) {\n            throw new Error('No user found!');\n          }\n\n          const isValid = await verifypassword(\n            credentials.password,\n            user.password\n          );\n\n          if (!isValid) {\n            throw new Error('Could not log you in!');\n          }\n\n          client.close();\n          return { email: user.email };\n        },\n      },\n    }),\n  ],\n});\n"]},"metadata":{},"sourceType":"module"}