{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/newsletter-registration.js\",\n    _s = $RefreshSig$();\n\nimport classes from './newsletter-registration.module.css';\nimport { useRef, useContext } from 'react';\nimport NotificationContext from '../../store/notification-context';\n\nvar validateEmail = function validateEmail(email) {\n  if (email.includes('@')) return true;else return false;\n};\n\nfunction NewsletterRegistration() {\n  _s();\n\n  var emailInputRef = useRef();\n  var notificationCtx = useContext(NotificationContext);\n\n  function registrationHandler(event) {\n    event.preventDefault();\n    var emailInput = emailInputRef.current.value;\n    if (!validateEmail(emailInput)) return console.error('Please type validate email.');\n    notificationCtx.showNotification({\n      title: 'Signing up...',\n      message: 'Registering for newsletter.',\n      status: 'pending'\n    });\n    fetch('/api/newsletter', {\n      method: 'POST',\n      body: JSON.stringify({\n        email: emailInput\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      notificationCtx.showNotification({\n        title: 'Success',\n        message: 'Successfully registered for newsletter.',\n        status: 'success'\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.newsletter,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign up to stay updated!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registrationHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Your email\",\n          \"aria-label\": \"Your email\",\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewsletterRegistration, \"DPwtQQ/gldp2MEe6QW3mx9/oYa8=\");\n\n_c = NewsletterRegistration;\nexport default NewsletterRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterRegistration\");","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/newsletter-registration.js"],"names":["classes","useRef","useContext","NotificationContext","validateEmail","email","includes","NewsletterRegistration","emailInputRef","notificationCtx","registrationHandler","event","preventDefault","emailInput","current","value","console","error","showNotification","title","message","status","fetch","method","body","JSON","stringify","headers","then","response","json","data","newsletter","control"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,sCAApB;AAEA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,OAAnC;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAUC,KAAV,EAAiB;AACrC,MAAIA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAJ,EAAyB,OAAO,IAAP,CAAzB,KACK,OAAO,KAAP;AACN,CAHD;;AAKA,SAASC,sBAAT,GAAkC;AAAA;;AAChC,MAAMC,aAAa,GAAGP,MAAM,EAA5B;AACA,MAAMQ,eAAe,GAAGP,UAAU,CAACC,mBAAD,CAAlC;;AAEA,WAASO,mBAAT,CAA6BC,KAA7B,EAAoC;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAMC,UAAU,GAAGL,aAAa,CAACM,OAAd,CAAsBC,KAAzC;AAEA,QAAI,CAACX,aAAa,CAACS,UAAD,CAAlB,EACE,OAAOG,OAAO,CAACC,KAAR,CAAc,6BAAd,CAAP;AAEFR,IAAAA,eAAe,CAACS,gBAAhB,CAAiC;AAC/BC,MAAAA,KAAK,EAAE,eADwB;AAE/BC,MAAAA,OAAO,EAAE,6BAFsB;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAMAC,IAAAA,KAAK,CAAC,iBAAD,EAAoB;AACvBC,MAAAA,MAAM,EAAE,MADe;AAEvBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAErB,QAAAA,KAAK,EAAEQ;AAAT,OAAf,CAFiB;AAGvBc,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHc,KAApB,CAAL,CAOGC,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD,EAAU;AACdtB,MAAAA,eAAe,CAACS,gBAAhB,CAAiC;AAC/BC,QAAAA,KAAK,EAAE,SADwB;AAE/BC,QAAAA,OAAO,EAAE,yCAFsB;AAG/BC,QAAAA,MAAM,EAAE;AAHuB,OAAjC;AAKD,KAdH;AAeD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACgC,UAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEtB,mBAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEV,OAAO,CAACiC,OAAxB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,WAAW,EAAC,YAHd;AAIE,wBAAW,YAJb;AAKE,UAAA,GAAG,EAAEzB;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GApDQD,sB;;KAAAA,sB;AAsDT,eAAeA,sBAAf","sourcesContent":["import classes from './newsletter-registration.module.css';\n\nimport { useRef, useContext } from 'react';\nimport NotificationContext from '../../store/notification-context';\n\nconst validateEmail = function (email) {\n  if (email.includes('@')) return true;\n  else return false;\n};\n\nfunction NewsletterRegistration() {\n  const emailInputRef = useRef();\n  const notificationCtx = useContext(NotificationContext);\n\n  function registrationHandler(event) {\n    event.preventDefault();\n\n    const emailInput = emailInputRef.current.value;\n\n    if (!validateEmail(emailInput))\n      return console.error('Please type validate email.');\n\n    notificationCtx.showNotification({\n      title: 'Signing up...',\n      message: 'Registering for newsletter.',\n      status: 'pending',\n    });\n\n    fetch('/api/newsletter', {\n      method: 'POST',\n      body: JSON.stringify({ email: emailInput }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        notificationCtx.showNotification({\n          title: 'Success',\n          message: 'Successfully registered for newsletter.',\n          status: 'success',\n        });\n      });\n  }\n\n  return (\n    <section className={classes.newsletter}>\n      <h2>Sign up to stay updated!</h2>\n      <form onSubmit={registrationHandler}>\n        <div className={classes.control}>\n          <input\n            type='email'\n            id='email'\n            placeholder='Your email'\n            aria-label='Your email'\n            ref={emailInputRef}\n          />\n          <button>Register</button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default NewsletterRegistration;\n"]},"metadata":{},"sourceType":"module"}