{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/api-route-project/components/input/comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  _s();\n\n  var eventId = props.eventId;\n\n  var _useState = useState(false),\n      showComments = _useState[0],\n      setShowComments = _useState[1];\n\n  var _useState2 = useState([]),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  useEffect(function () {\n    if (showComments) {\n      fetch(\"/api/comments/\".concat(eventId)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return setComments(data.comments);\n      });\n    }\n\n    console.log(comments);\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments(function (prevStatus) {\n      return !prevStatus;\n    });\n\n    if (!showComments) {}\n  }\n\n  function addCommentHandler(commentData) {\n    // send data to API\n    fetch(\"/api/comments/\".concat(eventId), {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return console.log(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? 'Hide' : 'Show', \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      items: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"s7Ua4oZer57BXoYludj/2o2YLho=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/api-route-project/components/input/comments.js"],"names":["useEffect","useState","CommentList","NewComment","classes","Comments","props","eventId","showComments","setShowComments","comments","setComments","fetch","then","response","json","data","console","log","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","method","body","JSON","stringify","headers"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,MACfC,OADe,GACHD,KADG,CACfC,OADe;;AAAA,kBAGiBN,QAAQ,CAAC,KAAD,CAHzB;AAAA,MAGhBO,YAHgB;AAAA,MAGFC,eAHE;;AAAA,mBAISR,QAAQ,CAAC,EAAD,CAJjB;AAAA,MAIhBS,QAJgB;AAAA,MAINC,WAJM;;AAMvBX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIQ,YAAJ,EAAkB;AAChBI,MAAAA,KAAK,yBAAkBL,OAAlB,EAAL,CACGM,IADH,CACQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,eAAUL,WAAW,CAACK,IAAI,CAACN,QAAN,CAArB;AAAA,OAFR;AAGD;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACD,GAPQ,EAON,CAACF,YAAD,CAPM,CAAT;;AASA,WAASW,qBAAT,GAAiC;AAC/BV,IAAAA,eAAe,CAAC,UAACW,UAAD;AAAA,aAAgB,CAACA,UAAjB;AAAA,KAAD,CAAf;;AAEA,QAAI,CAACZ,YAAL,EAAmB,CAClB;AACF;;AAED,WAASa,iBAAT,CAA2BC,WAA3B,EAAwC;AACtC;AACAV,IAAAA,KAAK,yBAAkBL,OAAlB,GAA6B;AAChCgB,MAAAA,MAAM,EAAE,MADwB;AAEhCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAF0B;AAGhCK,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHuB,KAA7B,CAAL,CAOGd,IAPH,CAOQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KAPR,EAQGF,IARH,CAQQ,UAACG,IAAD;AAAA,aAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAV;AAAA,KARR;AASD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEZ,OAAO,CAACM,QAA5B;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAES,qBAAjB;AAAA,iBACGX,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEa;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJnB,EAKGb,YAAY,iBAAI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEE;AAApB;AAAA;AAAA;AAAA;AAAA,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5CQL,Q;;KAAAA,Q;AA8CT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  const { eventId } = props;\n\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    if (showComments) {\n      fetch(`/api/comments/${eventId}`)\n        .then((response) => response.json())\n        .then((data) => setComments(data.comments));\n    }\n    console.log(comments);\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n\n    if (!showComments) {\n    }\n  }\n\n  function addCommentHandler(commentData) {\n    // send data to API\n    fetch(`/api/comments/${eventId}`, {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? 'Hide' : 'Show'} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList items={comments} />}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}