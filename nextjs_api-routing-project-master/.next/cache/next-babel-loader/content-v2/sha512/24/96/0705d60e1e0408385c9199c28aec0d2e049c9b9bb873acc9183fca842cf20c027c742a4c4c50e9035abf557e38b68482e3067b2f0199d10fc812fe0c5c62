{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/comments.js\";\nimport { useEffect, useState, useContext } from 'react';\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction Comments(props) {\n  const {\n    eventId\n  } = props;\n  const {\n    0: showComments,\n    1: setShowComments\n  } = useState(false);\n  const {\n    0: comments,\n    1: setComments\n  } = useState([]);\n  const notificationCtx = useContext(NotificationContext);\n  useEffect(() => {\n    if (showComments) {\n      fetch(`/api/comments/${eventId}`).then(response => response.json()).then(data => {\n        setComments(data.comments);\n      });\n    }\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments(prevStatus => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    notificationCtx.showNotification({\n      title: 'Sending comment',\n      message: 'Your comment is currently being stored into a database.',\n      status: 'pending'\n    }); // send data to API\n\n    fetch(`/api/comments/${eventId}`, {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return response.json().then(data => {\n        throw new Error(data.message || 'Something went wrong!');\n      });\n    }).then(data => {\n      notificationCtx.showNotification({\n        title: 'Success',\n        message: 'Your comment was saved.',\n        status: 'success'\n      });\n    }).catch(error => {\n      notificationCtx.showNotification({\n        title: 'Error!',\n        message: error.message,\n        status: 'error'\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? 'Hide' : 'Show', \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      items: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/comments.js"],"names":["useEffect","useState","useContext","CommentList","NewComment","classes","NotificationContext","Comments","props","eventId","showComments","setShowComments","comments","setComments","notificationCtx","fetch","then","response","json","data","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","showNotification","title","message","status","method","body","JSON","stringify","headers","ok","Error","catch","error"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from 'react';\n\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction Comments(props) {\n  const { eventId } = props;\n\n  const [showComments, setShowComments] = useState(false);\n  const [comments, setComments] = useState([]);\n\n  const notificationCtx = useContext(NotificationContext);\n\n  useEffect(() => {\n    if (showComments) {\n      fetch(`/api/comments/${eventId}`)\n        .then((response) => response.json())\n        .then((data) => {\n          setComments(data.comments);\n        });\n    }\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    notificationCtx.showNotification({\n      title: 'Sending comment',\n      message: 'Your comment is currently being stored into a database.',\n      status: 'pending',\n    });\n\n    // send data to API\n    fetch(`/api/comments/${eventId}`, {\n      method: 'POST',\n      body: JSON.stringify(commentData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return response.json().then((data) => {\n          throw new Error(data.message || 'Something went wrong!');\n        });\n      })\n      .then((data) => {\n        notificationCtx.showNotification({\n          title: 'Success',\n          message: 'Your comment was saved.',\n          status: 'success',\n        });\n      })\n      .catch((error) => {\n        notificationCtx.showNotification({\n          title: 'Error!',\n          message: error.message,\n          status: 'error',\n        });\n      });\n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? 'Hide' : 'Show'} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList items={comments} />}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}