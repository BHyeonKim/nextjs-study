{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function connectDatabase() {\n  const client = await MongoClient.connect('mongodb+srv://user:wDewiEi9ceXTNfj2@cluster0.xlism.mongodb.net/events?retryWrites=true&w=majority');\n  return client;\n}\n\nasync function insertDocument(client, document) {\n  const db = client.db();\n  await db.collection('newsletter').insertOne({\n    email\n  });\n}\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const {\n      email\n    } = req.body;\n\n    if (!email || !email.includes('@')) {\n      res.status(422).json({\n        message: 'Invalid email address.'\n      });\n      return;\n    }\n\n    let client;\n\n    try {\n      client = await connectDatabase();\n    } catch (error) {\n      res.status(500).json({\n        message: 'Connecting to the database failed.'\n      });\n      return;\n    }\n\n    try {\n      await insertDocument(client, {\n        email\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Inserting data failed.'\n      });\n    } finally {\n      client.close();\n      return;\n    }\n\n    res.status(201).json({\n      message: 'email info sent successfully!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/pages/api/newsletter.js"],"names":["MongoClient","connectDatabase","client","connect","insertDocument","document","db","collection","insertOne","email","handler","req","res","method","body","includes","status","json","message","error","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,eAAf,GAAiC;AAC/B,QAAMC,MAAM,GAAG,MAAMF,WAAW,CAACG,OAAZ,CACnB,mGADmB,CAArB;AAIA,SAAOD,MAAP;AACD;;AAED,eAAeE,cAAf,CAA8BF,MAA9B,EAAsCG,QAAtC,EAAgD;AAC9C,QAAMC,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AAEA,QAAMA,EAAE,CAACC,UAAH,CAAc,YAAd,EAA4BC,SAA5B,CAAsC;AAAEC,IAAAA;AAAF,GAAtC,CAAN;AACD;;AAED,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEJ,MAAAA;AAAF,QAAYE,GAAG,CAACG,IAAtB;;AAEA,QAAI,CAACL,KAAD,IAAU,CAACA,KAAK,CAACM,QAAN,CAAe,GAAf,CAAf,EAAoC;AAClCH,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,QAAIhB,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAMD,eAAe,EAA9B;AACD,KAFD,CAEE,OAAOkB,KAAP,EAAc;AACdP,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,QAAI;AACF,YAAMd,cAAc,CAACF,MAAD,EAAS;AAAEO,QAAAA;AAAF,OAAT,CAApB;AACD,KAFD,CAEE,OAAOU,KAAP,EAAc;AACdP,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD,KAJD,SAIU;AACRhB,MAAAA,MAAM,CAACkB,KAAP;AACA;AACD;;AAEDR,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAeR,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nasync function connectDatabase() {\n  const client = await MongoClient.connect(\n    'mongodb+srv://user:wDewiEi9ceXTNfj2@cluster0.xlism.mongodb.net/events?retryWrites=true&w=majority'\n  );\n\n  return client;\n}\n\nasync function insertDocument(client, document) {\n  const db = client.db();\n\n  await db.collection('newsletter').insertOne({ email });\n}\n\nasync function handler(req, res) {\n  if (req.method === 'POST') {\n    const { email } = req.body;\n\n    if (!email || !email.includes('@')) {\n      res.status(422).json({ message: 'Invalid email address.' });\n      return;\n    }\n\n    let client;\n\n    try {\n      client = await connectDatabase();\n    } catch (error) {\n      res.status(500).json({ message: 'Connecting to the database failed.' });\n      return;\n    }\n\n    try {\n      await insertDocument(client, { email });\n    } catch (error) {\n      res.status(500).json({ message: 'Inserting data failed.' });\n    } finally {\n      client.close();\n      return;\n    }\n\n    res.status(201).json({ message: 'email info sent successfully!' });\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}