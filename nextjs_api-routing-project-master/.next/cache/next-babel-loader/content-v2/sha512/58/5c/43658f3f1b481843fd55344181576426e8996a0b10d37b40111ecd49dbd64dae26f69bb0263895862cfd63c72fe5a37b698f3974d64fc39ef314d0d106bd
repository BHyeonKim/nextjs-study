{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/new-comment.js\";\nimport { useRef, useState } from 'react';\nimport { useContext } from 'react';\nimport classes from './new-comment.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction NewComment(props) {\n  const {\n    0: isInvalid,\n    1: setIsInvalid\n  } = useState(false);\n  const notificationCtx = useContext(NotificationContext);\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const commentInputRef = useRef();\n\n  function sendCommentHandler(event) {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredComment = commentInputRef.current.value;\n\n    if (!enteredEmail || enteredEmail.trim() === '' || !enteredEmail.includes('@') || !enteredName || enteredName.trim() === '' || !enteredComment || enteredComment.trim() === '') {\n      setIsInvalid(true);\n      return;\n    }\n\n    notificationCtx.showNotification({\n      title: 'Sending the comment',\n      message: 'Registering comment for the event',\n      status: 'pending'\n    });\n    props.onAddComment({\n      email: enteredEmail,\n      name: enteredName,\n      text: enteredComment\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: sendCommentHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid email address and comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\nexport default NewComment;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/components/input/new-comment.js"],"names":["useRef","useState","useContext","classes","NotificationContext","NewComment","props","isInvalid","setIsInvalid","notificationCtx","emailInputRef","nameInputRef","commentInputRef","sendCommentHandler","event","preventDefault","enteredEmail","current","value","enteredName","enteredComment","trim","includes","showNotification","title","message","status","onAddComment","email","name","text","form","row","control"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMQ,eAAe,GAAGP,UAAU,CAACE,mBAAD,CAAlC;AAEA,QAAMM,aAAa,GAAGV,MAAM,EAA5B;AACA,QAAMW,YAAY,GAAGX,MAAM,EAA3B;AACA,QAAMY,eAAe,GAAGZ,MAAM,EAA9B;;AAEA,WAASa,kBAAT,CAA4BC,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,YAAY,GAAGN,aAAa,CAACO,OAAd,CAAsBC,KAA3C;AACA,UAAMC,WAAW,GAAGR,YAAY,CAACM,OAAb,CAAqBC,KAAzC;AACA,UAAME,cAAc,GAAGR,eAAe,CAACK,OAAhB,CAAwBC,KAA/C;;AAEA,QACE,CAACF,YAAD,IACAA,YAAY,CAACK,IAAb,OAAwB,EADxB,IAEA,CAACL,YAAY,CAACM,QAAb,CAAsB,GAAtB,CAFD,IAGA,CAACH,WAHD,IAIAA,WAAW,CAACE,IAAZ,OAAuB,EAJvB,IAKA,CAACD,cALD,IAMAA,cAAc,CAACC,IAAf,OAA0B,EAP5B,EAQE;AACAb,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA;AACD;;AAEDC,IAAAA,eAAe,CAACc,gBAAhB,CAAiC;AAC/BC,MAAAA,KAAK,EAAE,qBADwB;AAE/BC,MAAAA,OAAO,EAAE,mCAFsB;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAMApB,IAAAA,KAAK,CAACqB,YAAN,CAAmB;AACjBC,MAAAA,KAAK,EAAEZ,YADU;AAEjBa,MAAAA,IAAI,EAAEV,WAFW;AAGjBW,MAAAA,IAAI,EAAEV;AAHW,KAAnB;AAKD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAAC4B,IAAzB;AAA+B,IAAA,QAAQ,EAAElB,kBAAzC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEV,OAAO,CAAC6B,GAAxB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE7B,OAAO,CAAC8B,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,GAAG,EAAEvB;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAEP,OAAO,CAAC8B,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,MAAtB;AAA6B,UAAA,GAAG,EAAEtB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAK,MAAA,SAAS,EAAER,OAAO,CAAC8B,OAAxB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAU,QAAA,EAAE,EAAC,SAAb;AAAuB,QAAA,IAAI,EAAC,GAA5B;AAAgC,QAAA,GAAG,EAAErB;AAArC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAeGL,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfhB,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;AAED,eAAeF,UAAf","sourcesContent":["import { useRef, useState } from 'react';\nimport { useContext } from 'react';\nimport classes from './new-comment.module.css';\nimport NotificationContext from '../../store/notification-context';\n\nfunction NewComment(props) {\n  const [isInvalid, setIsInvalid] = useState(false);\n  const notificationCtx = useContext(NotificationContext);\n\n  const emailInputRef = useRef();\n  const nameInputRef = useRef();\n  const commentInputRef = useRef();\n\n  function sendCommentHandler(event) {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredName = nameInputRef.current.value;\n    const enteredComment = commentInputRef.current.value;\n\n    if (\n      !enteredEmail ||\n      enteredEmail.trim() === '' ||\n      !enteredEmail.includes('@') ||\n      !enteredName ||\n      enteredName.trim() === '' ||\n      !enteredComment ||\n      enteredComment.trim() === ''\n    ) {\n      setIsInvalid(true);\n      return;\n    }\n\n    notificationCtx.showNotification({\n      title: 'Sending the comment',\n      message: 'Registering comment for the event',\n      status: 'pending',\n    });\n\n    props.onAddComment({\n      email: enteredEmail,\n      name: enteredName,\n      text: enteredComment,\n    });\n  }\n\n  return (\n    <form className={classes.form} onSubmit={sendCommentHandler}>\n      <div className={classes.row}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your email</label>\n          <input type='email' id='email' ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='name'>Your name</label>\n          <input type='text' id='name' ref={nameInputRef} />\n        </div>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='comment'>Your comment</label>\n        <textarea id='comment' rows='5' ref={commentInputRef}></textarea>\n      </div>\n      {isInvalid && <p>Please enter a valid email address and comment!</p>}\n      <button>Submit</button>\n    </form>\n  );\n}\n\nexport default NewComment;\n"]},"metadata":{},"sourceType":"module"}