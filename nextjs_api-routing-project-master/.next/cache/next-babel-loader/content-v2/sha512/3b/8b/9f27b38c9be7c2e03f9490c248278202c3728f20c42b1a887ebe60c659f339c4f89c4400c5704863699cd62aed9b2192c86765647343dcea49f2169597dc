{"ast":null,"code":"import fs from 'fs';\nimport { buildCommentDataPath, extractData } from '../../../utils/helper';\n\nfunction handler(req, res) {\n  const {\n    eventId\n  } = req.query;\n  console.log(req);\n\n  if (req.method === 'POST') {\n    const {\n      email,\n      name,\n      text\n    } = req.body; // server-side validation\n\n    if (!email.includes('@') || !name || name.trim() === '' || !text || text.trim() === '') {\n      res.status(422).json({\n        message: 'Invalid input.'\n      });\n      return;\n    } // const filePath = buildCommentDataPath();\n    // const comments = extractData(filePath);\n\n\n    const newComment = {\n      id: new Date().toISOString(),\n      email,\n      name,\n      text\n    };\n    res.status(201).json({\n      message: 'Added successfully!',\n      comment: newComment\n    }); // comments.push({\n    //   email,\n    //   name,\n    //   text,\n    // });\n    // fs.writeFileSync(filePath, JSON.stringify(comments));\n  }\n\n  if (req.mothod === 'GET') {\n    const dummyList = [{\n      id: 'c1',\n      name: 'bobo1',\n      email: 'test@test.com',\n      text: 'test text1'\n    }, {\n      id: 'c2',\n      name: 'bobo2',\n      email: 'test@test.com',\n      text: 'test text2'\n    }];\n    res.status(200).json({\n      comments: dummyList\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/pages/api/comments/[eventId].js"],"names":["fs","buildCommentDataPath","extractData","handler","req","res","eventId","query","console","log","method","email","name","text","body","includes","trim","status","json","message","newComment","id","Date","toISOString","comment","mothod","dummyList","comments"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,SAASC,oBAAT,EAA+BC,WAA/B,QAAkD,uBAAlD;;AAEA,SAASC,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAcF,GAAG,CAACG,KAAxB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;;AACA,MAAIA,GAAG,CAACM,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBT,GAAG,CAACU,IAAlC,CADyB,CAGzB;;AACA,QACE,CAACH,KAAK,CAACI,QAAN,CAAe,GAAf,CAAD,IACA,CAACH,IADD,IAEAA,IAAI,CAACI,IAAL,OAAgB,EAFhB,IAGA,CAACH,IAHD,IAIAA,IAAI,CAACG,IAAL,OAAgB,EALlB,EAME;AACAX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD,KAbwB,CAczB;AACA;;;AAEA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EADa;AAEjBZ,MAAAA,KAFiB;AAGjBC,MAAAA,IAHiB;AAIjBC,MAAAA;AAJiB,KAAnB;AAMAR,IAAAA,GAAG,CACAY,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEC,MAAAA,OAAO,EAAE,qBAAX;AAAkCK,MAAAA,OAAO,EAAEJ;AAA3C,KAFR,EAvByB,CA0BzB;AACA;AACA;AACA;AACA;AAEA;AACD;;AAED,MAAIhB,GAAG,CAACqB,MAAJ,KAAe,KAAnB,EAA0B;AACxB,UAAMC,SAAS,GAAG,CAChB;AACEL,MAAAA,EAAE,EAAE,IADN;AAEET,MAAAA,IAAI,EAAE,OAFR;AAGED,MAAAA,KAAK,EAAE,eAHT;AAIEE,MAAAA,IAAI,EAAE;AAJR,KADgB,EAOhB;AACEQ,MAAAA,EAAE,EAAE,IADN;AAEET,MAAAA,IAAI,EAAE,OAFR;AAGED,MAAAA,KAAK,EAAE,eAHT;AAIEE,MAAAA,IAAI,EAAE;AAJR,KAPgB,CAAlB;AAeAR,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAES,MAAAA,QAAQ,EAAED;AAAZ,KAArB;AACD;AACF;;AAED,eAAevB,OAAf","sourcesContent":["import fs from 'fs';\nimport { buildCommentDataPath, extractData } from '../../../utils/helper';\n\nfunction handler(req, res) {\n  const { eventId } = req.query;\n  console.log(req);\n  if (req.method === 'POST') {\n    const { email, name, text } = req.body;\n\n    // server-side validation\n    if (\n      !email.includes('@') ||\n      !name ||\n      name.trim() === '' ||\n      !text ||\n      text.trim() === ''\n    ) {\n      res.status(422).json({ message: 'Invalid input.' });\n      return;\n    }\n    // const filePath = buildCommentDataPath();\n    // const comments = extractData(filePath);\n\n    const newComment = {\n      id: new Date().toISOString(),\n      email,\n      name,\n      text,\n    };\n    res\n      .status(201)\n      .json({ message: 'Added successfully!', comment: newComment });\n    // comments.push({\n    //   email,\n    //   name,\n    //   text,\n    // });\n\n    // fs.writeFileSync(filePath, JSON.stringify(comments));\n  }\n\n  if (req.mothod === 'GET') {\n    const dummyList = [\n      {\n        id: 'c1',\n        name: 'bobo1',\n        email: 'test@test.com',\n        text: 'test text1',\n      },\n      {\n        id: 'c2',\n        name: 'bobo2',\n        email: 'test@test.com',\n        text: 'test text2',\n      },\n    ];\n\n    res.status(200).json({ comments: dummyList });\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}