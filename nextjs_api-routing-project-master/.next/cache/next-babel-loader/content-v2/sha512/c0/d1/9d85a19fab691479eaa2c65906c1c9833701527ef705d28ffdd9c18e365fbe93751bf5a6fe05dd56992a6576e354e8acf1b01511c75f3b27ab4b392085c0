{"ast":null,"code":"import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  const {\n    eventId\n  } = req.query;\n  const client = await MongoClient.connect('mongodb+srv://user:wDewiEi9ceXTNfj2@cluster0.xlism.mongodb.net/events?retryWrites=true&w=majority');\n\n  if (req.method === 'POST') {\n    const {\n      email,\n      name,\n      text\n    } = req.body; // server-side validation\n\n    if (!email.includes('@') || !name || name.trim() === '' || !text || text.trim() === '') {\n      res.status(422).json({\n        message: 'Invalid input.'\n      });\n      return;\n    }\n\n    const newComment = {\n      email,\n      name,\n      text,\n      eventId\n    };\n    const db = client.db();\n    const result = await db.collection('comments').insertOne(newComment); // console.log(result);\n\n    newComment.id = result.insertedId;\n    res.status(201).json({\n      message: 'Added successfully!',\n      comment: newComment\n    });\n  }\n\n  if (req.method === 'GET') {\n    const db = client.db();\n    const documents = await db.collection('comments').find().sort({\n      _id: -1\n    }).toArray();\n    res.status(200).json({\n      comments: documents\n    });\n  }\n\n  client.close();\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/nextjs_api-routing-project/pages/api/comments/[eventId].js"],"names":["MongoClient","handler","req","res","eventId","query","client","connect","method","email","name","text","body","includes","trim","status","json","message","newComment","db","result","collection","insertOne","id","insertedId","comment","documents","find","sort","_id","toArray","comments","close"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAcF,GAAG,CAACG,KAAxB;AAEA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACnB,mGADmB,CAArB;;AAIA,MAAIL,GAAG,CAACM,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBT,GAAG,CAACU,IAAlC,CADyB,CAGzB;;AACA,QACE,CAACH,KAAK,CAACI,QAAN,CAAe,GAAf,CAAD,IACA,CAACH,IADD,IAEAA,IAAI,CAACI,IAAL,OAAgB,EAFhB,IAGA,CAACH,IAHD,IAIAA,IAAI,CAACG,IAAL,OAAgB,EALlB,EAME;AACAX,MAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AACD;;AAED,UAAMC,UAAU,GAAG;AACjBT,MAAAA,KADiB;AAEjBC,MAAAA,IAFiB;AAGjBC,MAAAA,IAHiB;AAIjBP,MAAAA;AAJiB,KAAnB;AAOA,UAAMe,EAAE,GAAGb,MAAM,CAACa,EAAP,EAAX;AAEA,UAAMC,MAAM,GAAG,MAAMD,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,SAA1B,CAAoCJ,UAApC,CAArB,CAxByB,CA0BzB;;AACAA,IAAAA,UAAU,CAACK,EAAX,GAAgBH,MAAM,CAACI,UAAvB;AAEArB,IAAAA,GAAG,CACAY,MADH,CACU,GADV,EAEGC,IAFH,CAEQ;AAAEC,MAAAA,OAAO,EAAE,qBAAX;AAAkCQ,MAAAA,OAAO,EAAEP;AAA3C,KAFR;AAGD;;AAED,MAAIhB,GAAG,CAACM,MAAJ,KAAe,KAAnB,EAA0B;AACxB,UAAMW,EAAE,GAAGb,MAAM,CAACa,EAAP,EAAX;AAEA,UAAMO,SAAS,GAAG,MAAMP,EAAE,CACvBE,UADqB,CACV,UADU,EAErBM,IAFqB,GAGrBC,IAHqB,CAGhB;AAAEC,MAAAA,GAAG,EAAE,CAAC;AAAR,KAHgB,EAIrBC,OAJqB,EAAxB;AAMA3B,IAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEe,MAAAA,QAAQ,EAAEL;AAAZ,KAArB;AACD;;AAEDpB,EAAAA,MAAM,CAAC0B,KAAP;AACD;;AAED,eAAe/B,OAAf","sourcesContent":["import { MongoClient } from 'mongodb';\n\nasync function handler(req, res) {\n  const { eventId } = req.query;\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://user:wDewiEi9ceXTNfj2@cluster0.xlism.mongodb.net/events?retryWrites=true&w=majority'\n  );\n\n  if (req.method === 'POST') {\n    const { email, name, text } = req.body;\n\n    // server-side validation\n    if (\n      !email.includes('@') ||\n      !name ||\n      name.trim() === '' ||\n      !text ||\n      text.trim() === ''\n    ) {\n      res.status(422).json({ message: 'Invalid input.' });\n      return;\n    }\n\n    const newComment = {\n      email,\n      name,\n      text,\n      eventId,\n    };\n\n    const db = client.db();\n\n    const result = await db.collection('comments').insertOne(newComment);\n\n    // console.log(result);\n    newComment.id = result.insertedId;\n\n    res\n      .status(201)\n      .json({ message: 'Added successfully!', comment: newComment });\n  }\n\n  if (req.method === 'GET') {\n    const db = client.db();\n\n    const documents = await db\n      .collection('comments')\n      .find()\n      .sort({ _id: -1 })\n      .toArray();\n\n    res.status(200).json({ comments: documents });\n  }\n\n  client.close();\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}