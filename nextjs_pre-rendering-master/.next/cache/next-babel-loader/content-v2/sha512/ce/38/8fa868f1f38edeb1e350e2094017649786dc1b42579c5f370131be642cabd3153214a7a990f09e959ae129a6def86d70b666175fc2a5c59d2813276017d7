{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/pre-rendering/pages/last-sales.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nvar LastSalesPage = function LastSalesPage(props) {\n  _s();\n\n  var _useState = useState(),\n      sales = _useState[0],\n      setSales = _useState[1];\n\n  var _useState2 = useState(false),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useSWR = useSWR('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json'),\n      data = _useSWR.data,\n      error = _useSWR.error;\n\n  useEffect(function () {\n    setIsLoading(true);\n    fetch('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var transformedSales = [];\n\n      for (var key in data) {\n        transformedSales.push({\n          id: key,\n          username: data[key].username,\n          volume: data[key].volume\n        });\n      }\n\n      setSales(transformedSales);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (!sales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(function (sale) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [sale.username, \" - $\", sale.volume]\n      }, sale.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LastSalesPage, \"jo95cKbJQKlVxkdMsfa+gzuaVs0=\", false, function () {\n  return [useSWR];\n});\n\n_c = LastSalesPage;\nexport default LastSalesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastSalesPage\");","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/pre-rendering/pages/last-sales.js"],"names":["useEffect","useState","useSWR","LastSalesPage","props","sales","setSales","isLoading","setIsLoading","data","error","fetch","then","response","json","transformedSales","key","push","id","username","volume","map","sale"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACLH,QAAQ,EADH;AAAA,MACxBI,KADwB;AAAA,MACjBC,QADiB;;AAAA,mBAEGL,QAAQ,CAAC,KAAD,CAFX;AAAA,MAExBM,SAFwB;AAAA,MAEbC,YAFa;;AAAA,gBAIPN,MAAM,CAC5B,oEAD4B,CAJC;AAAA,MAIvBO,IAJuB,WAIvBA,IAJuB;AAAA,MAIjBC,KAJiB,WAIjBA,KAJiB;;AAQ/BV,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAG,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACH,IAAD,EAAU;AACd,UAAMM,gBAAgB,GAAG,EAAzB;;AAEA,WAAK,IAAMC,GAAX,IAAkBP,IAAlB,EAAwB;AACtBM,QAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AACpBC,UAAAA,EAAE,EAAEF,GADgB;AAEpBG,UAAAA,QAAQ,EAAEV,IAAI,CAACO,GAAD,CAAJ,CAAUG,QAFA;AAGpBC,UAAAA,MAAM,EAAEX,IAAI,CAACO,GAAD,CAAJ,CAAUI;AAHE,SAAtB;AAKD;;AACDd,MAAAA,QAAQ,CAACS,gBAAD,CAAR;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH;AAeD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAID,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,sBACE;AAAA,cACGA,KAAK,CAACgB,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAA,mBACGA,IAAI,CAACH,QADR,UACsBG,IAAI,CAACF,MAD3B;AAAA,SAASE,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CA7CD;;GAAMf,a;UAIoBD,M;;;KAJpBC,a;AA+CN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nconst LastSalesPage = (props) => {\n  const [sales, setSales] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { data, error } = useSWR(\n    'https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json'\n  );\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json')\n      .then((response) => response.json())\n      .then((data) => {\n        const transformedSales = [];\n\n        for (const key in data) {\n          transformedSales.push({\n            id: key,\n            username: data[key].username,\n            volume: data[key].volume,\n          });\n        }\n        setSales(transformedSales);\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading....</p>;\n  }\n\n  if (!sales) {\n    return <p>No data yet</p>;\n  }\n\n  return (\n    <ul>\n      {sales.map((sale) => (\n        <li key={sale.id}>\n          {sale.username} - ${sale.volume}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}