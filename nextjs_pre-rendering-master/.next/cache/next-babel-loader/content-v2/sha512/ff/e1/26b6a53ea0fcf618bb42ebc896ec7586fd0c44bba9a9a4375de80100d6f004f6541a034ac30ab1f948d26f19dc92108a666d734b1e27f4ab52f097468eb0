{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/pre-rendering/pages/last-sales.js\";\nimport { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nconst LastSalesPage = props => {\n  const {\n    0: sales,\n    1: setSales\n  } = useState();\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n  useSWR('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json');\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json').then(response => response.json()).then(data => {\n      const transformedSales = [];\n\n      for (const key in data) {\n        transformedSales.push({\n          id: key,\n          username: data[key].username,\n          volume: data[key].volume\n        });\n      }\n\n      setSales(transformedSales);\n      setIsLoading(false);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (!sales) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data yet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(sale => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [sale.username, \" - $\", sale.volume]\n    }, sale.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default LastSalesPage;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/pre-rendering/pages/last-sales.js"],"names":["useEffect","useState","useSWR","LastSalesPage","props","sales","setSales","isLoading","setIsLoading","fetch","then","response","json","data","transformedSales","key","push","id","username","volume","map","sale"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,EAAlC;AACA,QAAM;AAAA,OAACM,SAAD;AAAA,OAAYC;AAAZ,MAA4BP,QAAQ,CAAC,KAAD,CAA1C;AAEAC,EAAAA,MAAM,CAAC,oEAAD,CAAN;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEAC,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,YAAMC,gBAAgB,GAAG,EAAzB;;AAEA,WAAK,MAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,QAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AACpBC,UAAAA,EAAE,EAAEF,GADgB;AAEpBG,UAAAA,QAAQ,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,QAFA;AAGpBC,UAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI;AAHE,SAAtB;AAKD;;AACDb,MAAAA,QAAQ,CAACQ,gBAAD,CAAR;AACAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH;AAeD,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAID,SAAJ,EAAe;AACb,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAI,CAACF,KAAL,EAAY;AACV,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,cACGA,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACT;AAAA,iBACGA,IAAI,CAACH,QADR,UACsBG,IAAI,CAACF,MAD3B;AAAA,OAASE,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA3CD;;AA6CA,eAAed,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport useSWR from 'swr';\n\nconst LastSalesPage = (props) => {\n  const [sales, setSales] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useSWR('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetch('https://nextjs-course-2a033-default-rtdb.firebaseio.com/sales.json')\n      .then((response) => response.json())\n      .then((data) => {\n        const transformedSales = [];\n\n        for (const key in data) {\n          transformedSales.push({\n            id: key,\n            username: data[key].username,\n            volume: data[key].volume,\n          });\n        }\n        setSales(transformedSales);\n        setIsLoading(false);\n      });\n  }, []);\n\n  if (isLoading) {\n    return <p>Loading....</p>;\n  }\n\n  if (!sales) {\n    return <p>No data yet</p>;\n  }\n\n  return (\n    <ul>\n      {sales.map((sale) => (\n        <li key={sale.id}>\n          {sale.username} - ${sale.volume}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}