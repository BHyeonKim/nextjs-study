{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kimbohyeon/NextJS/pre-rendering/pages/[pid]/index.js\";\nimport fs from 'fs/promises';\nimport path from 'path';\nimport { Fragment } from 'react';\n\nconst ProductDetailPage = props => {\n  const {\n    loadedProduct\n  } = props;\n\n  if (!loadedProduct) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const productId = params.pid;\n  const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n  const product = data.products.find(product => product.id === productId);\n  return {\n    props: {\n      loadedProduct: product\n    }\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        pid: 'p1'\n      }\n    }],\n    fallback: true\n  };\n}\nexport default ProductDetailPage;","map":{"version":3,"sources":["/Users/kimbohyeon/NextJS/pre-rendering/pages/[pid]/index.js"],"names":["fs","path","Fragment","ProductDetailPage","props","loadedProduct","title","description","getStaticProps","context","params","productId","pid","filePath","join","process","cwd","jsonData","readFile","data","JSON","parse","product","products","find","id","getStaticPaths","paths","fallback"],"mappings":";;AAAA,OAAOA,EAAP,MAAe,aAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAoBD,KAA1B;;AAEA,MAAI,CAACC,aAAL,EAAoB;AAClB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAbD;;AAeA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AAEA,QAAME,SAAS,GAAGD,MAAM,CAACE,GAAzB;AAEA,QAAMC,QAAQ,GAAGZ,IAAI,CAACa,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB;AACA,QAAMC,QAAQ,GAAG,MAAMjB,EAAE,CAACkB,QAAH,CAAYL,QAAZ,CAAvB;AACA,QAAMM,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAb;AAEA,QAAMK,OAAO,GAAGH,IAAI,CAACI,QAAL,CAAcC,IAAd,CAAoBF,OAAD,IAAaA,OAAO,CAACG,EAAR,KAAed,SAA/C,CAAhB;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAE;AACLC,MAAAA,aAAa,EAAEiB;AADV;AADF,GAAP;AAKD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,CACL;AACEjB,MAAAA,MAAM,EAAE;AACNE,QAAAA,GAAG,EAAE;AADC;AADV,KADK,CADF;AAQLgB,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD;AAED,eAAezB,iBAAf","sourcesContent":["import fs from 'fs/promises';\nimport path from 'path';\n\nimport { Fragment } from 'react';\n\nconst ProductDetailPage = (props) => {\n  const { loadedProduct } = props;\n\n  if (!loadedProduct) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <Fragment>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </Fragment>\n  );\n};\n\nexport async function getStaticProps(context) {\n  const { params } = context;\n\n  const productId = params.pid;\n\n  const filePath = path.join(process.cwd(), 'data', 'dummy-backend.json');\n  const jsonData = await fs.readFile(filePath);\n  const data = JSON.parse(jsonData);\n\n  const product = data.products.find((product) => product.id === productId);\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      {\n        params: {\n          pid: 'p1',\n        },\n      },\n    ],\n    fallback: true,\n  };\n}\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}